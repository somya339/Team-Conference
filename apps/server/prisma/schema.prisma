datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String               @id @default(uuid())
  name         String
  email        String               @unique
  password     String
  lastLoginAt  DateTime? @db.Timestamptz
  createdAt    DateTime             @default(now()) @db.Timestamptz
  updatedAt    DateTime             @updatedAt @db.Timestamptz
  submissions  Submission[]         @relation("UserSubmissions")
  participants MeetingParticipant[] @relation("User")
  meetings     Meeting[]            @relation("MeetingCreator")
}

model Meeting {
  id             String               @id @default(uuid())
  title          String
  code           String               @unique
  createdBy      String
  creator        User                 @relation("MeetingCreator", fields: [createdBy], references: [id])
  createdAt      DateTime             @default(now()) @db.Timestamptz
  updatedAt      DateTime             @updatedAt @db.Timestamptz
  startTime      DateTime?            @db.Timestamptz
  endTime        DateTime?            @db.Timestamptz
  maxParticipants Int                 @default(50)
  status         String               @default("scheduled")
  description    String?
  roomName       String?
  roomUrl        String?
  participants   MeetingParticipant[] @relation("MeetingParticipants")
  submissions    Submission[]         @relation("MeetingSubmissions")
}

model MeetingParticipant {
  id             String   @id @default(uuid())
  meetingId      String
  meeting        Meeting  @relation(fields: [meetingId], references: [id], name: "MeetingParticipants")
  userId         String
  user           User     @relation(fields: [userId], references: [id], name: "User")
  joinTime       DateTime @default(now()) @db.Timestamptz
  leaveTime      DateTime?           @db.Timestamptz
  isActive       Boolean  @default(true)

  @@unique([userId, meetingId])
}

model Submission {
  id          String   @id @default(uuid())
  meetingId   String
  meeting     Meeting  @relation(fields: [meetingId], references: [id], name: "MeetingSubmissions")
  userId      String
  user        User     @relation(fields: [userId], references: [id], name: "UserSubmissions")
  fileUrl     String
  fileName    String
  fileType    String
  fileSize    Int
  createdAt   DateTime @default(now()) @db.Timestamptz
  updatedAt   DateTime @updatedAt @db.Timestamptz

  @@unique([userId, meetingId])
}
