datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output = "./generated/client"
}

model User {
  id           String               @id @default(uuid())
  username     String
  email        String               @unique
  password     String
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  submissions  Submission[]         @relation("UserSubmissions")
  participants MeetingParticipant[] @relation("User")
}

model Meeting {
  id             String               @id @default(uuid())
  title          String
  code           String               @unique
  userId         String
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  startTime      DateTime?
  durationInSecs Int                  @default(0)
  description    String?
  participants   MeetingParticipant[] @relation("MeetingParticipants")
  submissions    Submission[]         @relation("MeetingSubmissions")
}

model MeetingParticipant {
  id             String   @id @default(uuid())
  meetingId      String
  meeting        Meeting  @relation(fields: [meetingId], references: [id], name: "MeetingParticipants")
  userId         String
  user           User     @relation(fields: [userId], references: [id], name: "User")
  joinTime       DateTime
  durationInSecs Int
  isActive       Boolean  @default(true)

  @@unique([userId, meetingId])
}

model Submission {
  id          String   @id @default(uuid())
  meetingId   String
  meeting     Meeting  @relation(fields: [meetingId], references: [id], name: "MeetingSubmissions")
  userId      String
  user        User     @relation(fields: [userId], references: [id], name: "UserSubmissions")
  fileUrl     String
  fileName    String
  fileType    String
  fileSize    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, meetingId])
}
